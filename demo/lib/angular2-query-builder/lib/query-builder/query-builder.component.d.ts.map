{"version":3,"file":"query-builder.component.d.ts","sources":["query-builder.component.d.ts"],"names":[],"mappingssourcesContent":["import { AbstractControl, ControlValueAccessor, ValidationErrors, Validator } from '@angular/forms';\nimport { QueryOperatorDirective } from './query-operator.directive';\nimport { QueryFieldDirective } from './query-field.directive';\nimport { QueryEntityDirective } from './query-entity.directive';\nimport { QuerySwitchGroupDirective } from './query-switch-group.directive';\nimport { QueryButtonGroupDirective } from './query-button-group.directive';\nimport { QueryInputDirective } from './query-input.directive';\nimport { QueryRemoveButtonDirective } from './query-remove-button.directive';\nimport { QueryEmptyWarningDirective } from './query-empty-warning.directive';\nimport { QueryArrowIconDirective } from './query-arrow-icon.directive';\nimport { ButtonGroupContext, Entity, Field, SwitchGroupContext, EntityContext, FieldContext, InputContext, LocalRuleMeta, OperatorContext, Option, QueryBuilderClassNames, QueryBuilderConfig, RemoveButtonContext, ArrowIconContext, Rule, RuleSet, EmptyWarningContext } from './query-builder.interfaces';\nimport { ChangeDetectorRef, OnChanges, OnInit, QueryList, SimpleChanges, TemplateRef, ElementRef } from '@angular/core';\nexport declare const CONTROL_VALUE_ACCESSOR: any;\nexport declare const VALIDATOR: any;\nexport declare class QueryBuilderComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\n    private changeDetectorRef;\n    fields: Field[];\n    filterFields: Field[];\n    entities: Entity[];\n    defaultClassNames: QueryBuilderClassNames;\n    defaultOperatorMap: {\n        [key: string]: string[];\n    };\n    disabled: boolean;\n    data: RuleSet;\n    onChangeCallback: () => void;\n    onTouchedCallback: () => any;\n    allowRuleset: boolean;\n    allowCollapse: boolean;\n    emptyMessage: string;\n    classNames: QueryBuilderClassNames;\n    operatorMap: {\n        [key: string]: string[];\n    };\n    parentValue: RuleSet;\n    config: QueryBuilderConfig;\n    parentArrowIconTemplate: QueryArrowIconDirective;\n    parentInputTemplates: QueryList<QueryInputDirective>;\n    parentOperatorTemplate: QueryOperatorDirective;\n    parentFieldTemplate: QueryFieldDirective;\n    parentEntityTemplate: QueryEntityDirective;\n    parentSwitchGroupTemplate: QuerySwitchGroupDirective;\n    parentButtonGroupTemplate: QueryButtonGroupDirective;\n    parentRemoveButtonTemplate: QueryRemoveButtonDirective;\n    parentEmptyWarningTemplate: QueryEmptyWarningDirective;\n    parentChangeCallback: () => void;\n    parentTouchedCallback: () => void;\n    persistValueOnFieldChange: boolean;\n    treeContainer: ElementRef;\n    buttonGroupTemplate: QueryButtonGroupDirective;\n    switchGroupTemplate: QuerySwitchGroupDirective;\n    fieldTemplate: QueryFieldDirective;\n    entityTemplate: QueryEntityDirective;\n    operatorTemplate: QueryOperatorDirective;\n    removeButtonTemplate: QueryRemoveButtonDirective;\n    emptyWarningTemplate: QueryEmptyWarningDirective;\n    inputTemplates: QueryList<QueryInputDirective>;\n    arrowIconTemplate: QueryArrowIconDirective;\n    private defaultTemplateTypes;\n    private defaultPersistValueTypes;\n    private defaultEmptyList;\n    private operatorsCache;\n    private inputContextCache;\n    private operatorContextCache;\n    private fieldContextCache;\n    private entityContextCache;\n    private removeButtonContextCache;\n    private buttonGroupContext;\n    constructor(changeDetectorRef: ChangeDetectorRef);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    validate(control: AbstractControl): ValidationErrors | null;\n    get value(): RuleSet;\n    set value(value: RuleSet);\n    writeValue(obj: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState(isDisabled: boolean): void;\n    getDisabledState: () => boolean;\n    findTemplateForRule(rule: Rule): TemplateRef<any>;\n    findQueryInput(type: string): QueryInputDirective;\n    getOperators(field: string): string[];\n    getFields(entity: string): Field[];\n    getInputType(field: string, operator: string): string;\n    getOptions(field: string): Option[];\n    getClassNames(...args: any[]): string;\n    getDefaultField(entity: Entity): Field;\n    getDefaultOperator(field: Field): string;\n    addRule(parent?: RuleSet): void;\n    removeRule(rule: Rule, parent?: RuleSet): void;\n    addRuleSet(parent?: RuleSet): void;\n    removeRuleSet(ruleset?: RuleSet, parent?: RuleSet): void;\n    transitionEnd(e: Event): void;\n    toggleCollapse(): void;\n    computedTreeContainerHeight(): void;\n    changeCondition(value: string): void;\n    changeOperator(rule: Rule): void;\n    coerceValueForOperator(operator: string, value: any, rule: Rule): any;\n    changeInput(): void;\n    changeField(fieldValue: string, rule: Rule): void;\n    changeEntity(entityValue: string, rule: Rule, index: number, data: RuleSet): void;\n    getDefaultValue(defaultValue: any): any;\n    getOperatorTemplate(): TemplateRef<any>;\n    getFieldTemplate(): TemplateRef<any>;\n    getEntityTemplate(): TemplateRef<any>;\n    getArrowIconTemplate(): TemplateRef<any>;\n    getButtonGroupTemplate(): TemplateRef<any>;\n    getSwitchGroupTemplate(): TemplateRef<any>;\n    getRemoveButtonTemplate(): TemplateRef<any>;\n    getEmptyWarningTemplate(): TemplateRef<any>;\n    getQueryItemClassName(local: LocalRuleMeta): string;\n    getButtonGroupContext(): ButtonGroupContext;\n    getRemoveButtonContext(rule: Rule): RemoveButtonContext;\n    getFieldContext(rule: Rule): FieldContext;\n    getEntityContext(rule: Rule): EntityContext;\n    getSwitchGroupContext(): SwitchGroupContext;\n    getArrowIconContext(): ArrowIconContext;\n    getEmptyWarningContext(): EmptyWarningContext;\n    getOperatorContext(rule: Rule): OperatorContext;\n    getInputContext(rule: Rule): InputContext;\n    private calculateFieldChangeValue;\n    private checkEmptyRuleInRuleset;\n    private validateRulesInRuleset;\n    private handleDataChange;\n    private handleTouched;\n}\n"]}