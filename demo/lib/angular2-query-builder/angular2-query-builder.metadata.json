{"__symbolic":"module","version":4,"metadata":{"RuleSet":{"__symbolic":"interface"},"Rule":{"__symbolic":"interface"},"Option":{"__symbolic":"interface"},"FieldMap":{"__symbolic":"interface"},"Field":{"__symbolic":"interface"},"LocalRuleMeta":{"__symbolic":"interface"},"EntityMap":{"__symbolic":"interface"},"Entity":{"__symbolic":"interface"},"QueryBuilderClassNames":{"__symbolic":"interface"},"QueryBuilderConfig":{"__symbolic":"interface"},"SwitchGroupContext":{"__symbolic":"interface"},"EmptyWarningContext":{"__symbolic":"interface"},"ArrowIconContext":{"__symbolic":"interface"},"EntityContext":{"__symbolic":"interface"},"FieldContext":{"__symbolic":"interface"},"OperatorContext":{"__symbolic":"interface"},"InputContext":{"__symbolic":"interface"},"ButtonGroupContext":{"__symbolic":"interface"},"RemoveButtonContext":{"__symbolic":"interface"},"CONTROL_VALUE_ACCESSOR":{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":53,"character":11},"useExisting":{"__symbolic":"reference","name":"QueryBuilderComponent"},"multi":true},"VALIDATOR":{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALIDATORS","line":59,"character":11},"useExisting":{"__symbolic":"reference","name":"QueryBuilderComponent"},"multi":true},"QueryBuilderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":64,"character":1},"arguments":[{"selector":"query-builder","providers":[{"__symbolic":"reference","name":"CONTROL_VALUE_ACCESSOR"},{"__symbolic":"reference","name":"VALIDATOR"}],"template":"<div [ngClass]=\"getClassNames('switchRow')\">\n  <ng-template #defaultArrowIcon>\n    <i [ngClass]=\"getClassNames('arrowIcon')\"></i>\n  </ng-template>\n\n  <a *ngIf=\"allowCollapse\" (click)=\"toggleCollapse()\" [ngClass]=\"getClassNames('arrowIconButton', data.collapsed ? 'collapsed' : null)\">\n    <ng-container *ngIf=\"getArrowIconTemplate() as template; else defaultArrowIcon\">\n      <ng-container *ngTemplateOutlet=\"template; context: getArrowIconContext()\"></ng-container>\n    </ng-container>\n  </a>\n\n  <ng-container *ngIf=\"getButtonGroupTemplate() as template; else defaultButtonGroup\">\n    <div [ngClass]=\"getClassNames('buttonGroup', 'rightAlign')\">\n      <ng-container *ngTemplateOutlet=\"template; context: getButtonGroupContext()\"></ng-container>\n    </div>\n  </ng-container>\n\n  <ng-template #defaultButtonGroup>\n    <div [ngClass]=\"getClassNames('buttonGroup', 'rightAlign')\">\n      <button type=\"button\" (click)=\"addRule()\" [ngClass]=\"getClassNames('button')\" [disabled]=disabled>\n        <i [ngClass]=\"getClassNames('addIcon')\"></i> Rule\n      </button>\n      <button type=\"button\" (click)=\"addRuleSet()\" [ngClass]=\"getClassNames('button')\" *ngIf=\"allowRuleset\" [disabled]=disabled>\n        <i [ngClass]=\"getClassNames('addIcon')\"></i> Ruleset\n      </button>\n      <ng-container *ngIf=\"!!parentValue && allowRuleset\">\n        <button type=\"button\" (click)=\"removeRuleSet()\" [ngClass]=\"getClassNames('button', 'removeButton')\" [disabled]=disabled>\n          <i [ngClass]=\"getClassNames('removeIcon')\"></i>\n        </button>\n      </ng-container>\n    </div>\n  </ng-template>\n\n  <ng-container *ngIf=\"getSwitchGroupTemplate() as template; else defaultSwitchGroup\">\n    <ng-container *ngTemplateOutlet=\"template; context: getSwitchGroupContext()\"></ng-container>\n  </ng-container>\n\n  <ng-template #defaultSwitchGroup>\n    <div [ngClass]=\"getClassNames('switchGroup', 'transition')\" *ngIf=\"data\">\n      <div [ngClass]=\"getClassNames('switchControl')\">\n        <input type=\"radio\" [ngClass]=\"getClassNames('switchRadio')\" [(ngModel)]=\"data.condition\" [disabled]=disabled\n          value=\"and\" #andOption />\n        <label (click)=\"changeCondition(andOption.value)\" [ngClass]=\"getClassNames('switchLabel')\">AND</label>\n      </div>\n      <div [ngClass]=\"getClassNames('switchControl')\">\n        <input type=\"radio\" [ngClass]=\"getClassNames('switchRadio')\" [(ngModel)]=\"data.condition\" [disabled]=disabled\n          value=\"or\" #orOption />\n        <label (click)=\"changeCondition(orOption.value)\" [ngClass]=\"getClassNames('switchLabel')\">OR</label>\n      </div>\n    </div>\n  </ng-template>\n</div>\n\n<div #treeContainer (transitionend)=\"transitionEnd($event)\" [ngClass]=\"getClassNames('treeContainer', data.collapsed ? 'collapsed' : null)\">\n  <ul [ngClass]=\"getClassNames('tree')\" *ngIf=\"data && data.rules\">\n    <ng-container *ngFor=\"let rule of data.rules;let i=index\">\n\n      <ng-container *ngIf=\"{ruleset: !!rule.rules, invalid: !config.allowEmptyRulesets && rule.rules && rule.rules.length === 0} as local\">\n        <li [ngClass]=\"getQueryItemClassName(local)\">\n          <ng-container *ngIf=\"!local.ruleset\">\n\n            <ng-container *ngIf=\"getRemoveButtonTemplate() as template; else defaultRemoveButton\">\n              <div [ngClass]=\"getClassNames('buttonGroup', 'rightAlign')\">\n                <ng-container *ngTemplateOutlet=\"template; context: getRemoveButtonContext(rule)\"></ng-container>\n              </div>\n            </ng-container>\n\n            <ng-template #defaultRemoveButton>\n              <div [ngClass]=\"getClassNames('removeButtonSize', 'rightAlign')\">\n                <button type=\"button\" [ngClass]=\"getClassNames('button', 'removeButton')\" (click)=\"removeRule(rule, data)\" [disabled]=disabled>\n                  <i [ngClass]=\"getClassNames('removeIcon')\"></i>\n                </button>\n              </div>\n            </ng-template>\n\n            <div *ngIf=\"entities?.length > 0\" class=\"q-inline-block-display\">\n              <ng-container *ngIf=\"getEntityTemplate() as template; else defaultEntity\">\n                <ng-container *ngTemplateOutlet=\"template; context: getEntityContext(rule)\"></ng-container>\n              </ng-container>\n            </div>\n\n            <ng-template #defaultEntity>\n              <div [ngClass]=\"getClassNames('entityControlSize')\">\n                <select [ngClass]=\"getClassNames('entityControl')\" [(ngModel)]=\"rule.entity\" (ngModelChange)=\"changeEntity($event, rule,i,data)\"\n                  [disabled]=\"disabled\">\n                  <option *ngFor=\"let entity of entities\" [ngValue]=\"entity.value\">\n                    {{entity.name}}\n                  </option>\n                </select>\n              </div>\n            </ng-template>\n\n            <ng-container *ngIf=\"getFieldTemplate() as template; else defaultField\">\n              <ng-container *ngTemplateOutlet=\"template; context: getFieldContext(rule)\"></ng-container>\n            </ng-container>\n\n            <ng-template #defaultField>\n              <div [ngClass]=\"getClassNames('fieldControlSize')\">\n                <select [ngClass]=\"getClassNames('fieldControl')\" [(ngModel)]=\"rule.field\" (ngModelChange)=\"changeField($event, rule)\"\n                  [disabled]=\"disabled\">\n                  <option *ngFor=\"let field of getFields(rule.entity)\" [ngValue]=\"field.value\">\n                    {{field.name}}\n                  </option>\n                </select>\n              </div>\n            </ng-template>\n\n            <ng-container *ngIf=\"getOperatorTemplate() as template; else defaultOperator\">\n              <ng-container *ngTemplateOutlet=\"template; context: getOperatorContext(rule)\"></ng-container>\n            </ng-container>\n\n            <ng-template #defaultOperator>\n              <div [ngClass]=\"getClassNames('operatorControlSize')\">\n                <select [ngClass]=\"getClassNames('operatorControl')\" [(ngModel)]=\"rule.operator\" (ngModelChange)=\"changeOperator(rule)\"\n                  [disabled]=\"disabled\">\n                  <option *ngFor=\"let operator of getOperators(rule.field)\" [ngValue]=\"operator\">\n                    {{operator}}\n                  </option>\n                </select>\n              </div>\n            </ng-template>\n\n            <ng-container *ngIf=\"findTemplateForRule(rule) as template; else defaultInput\">\n              <ng-container *ngTemplateOutlet=\"template; context: getInputContext(rule)\"></ng-container>\n            </ng-container>\n\n            <ng-template #defaultInput>\n              <div [ngClass]=\"getClassNames('inputControlSize')\" [ngSwitch]=\"getInputType(rule.field, rule.operator)\">\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'string'\" type=\"text\">\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'number'\" type=\"number\">\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'date'\" type=\"date\">\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'time'\" type=\"time\">\n                <select [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'category'\">\n                  <option *ngFor=\"let opt of getOptions(rule.field)\" [ngValue]=\"opt.value\">\n                    {{opt.name}}\n                  </option>\n                </select>\n                <ng-container *ngSwitchCase=\"'multiselect'\">\n                  <select [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\n                    [disabled]=\"disabled\" multiple>\n                    <option *ngFor=\"let opt of getOptions(rule.field)\" [ngValue]=\"opt.value\">\n                      {{opt.name}}\n                    </option>\n                  </select>\n                </ng-container>\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'boolean'\" type=\"checkbox\">\n              </div>\n            </ng-template>\n\n          </ng-container>\n          <query-builder *ngIf=\"local.ruleset\" [data]=\"rule\" [disabled]=\"disabled\" [parentTouchedCallback]=\"parentTouchedCallback || onTouchedCallback\"\n            [parentChangeCallback]=\"parentChangeCallback || onChangeCallback\" [parentInputTemplates]=\"parentInputTemplates || inputTemplates\"\n            [parentOperatorTemplate]=\"parentOperatorTemplate || operatorTemplate\" [parentFieldTemplate]=\"parentFieldTemplate || fieldTemplate\"\n            [parentEntityTemplate]=\"parentEntityTemplate || entityTemplate\" [parentSwitchGroupTemplate]=\"parentSwitchGroupTemplate || switchGroupTemplate\"\n            [parentButtonGroupTemplate]=\"parentButtonGroupTemplate || buttonGroupTemplate\" [parentRemoveButtonTemplate]=\"parentRemoveButtonTemplate || removeButtonTemplate\"\n            [parentEmptyWarningTemplate]=\"parentEmptyWarningTemplate || emptyWarningTemplate\" [parentArrowIconTemplate]=\"parentArrowIconTemplate || arrowIconTemplate\"\n            [parentValue]=\"data\" [classNames]=\"classNames\" [config]=\"config\" [allowRuleset]=\"allowRuleset\"\n            [allowCollapse]=\"allowCollapse\" [emptyMessage]=\"emptyMessage\" [operatorMap]=\"operatorMap\">\n          </query-builder>\n\n          <ng-container *ngIf=\"getEmptyWarningTemplate() as template; else defaultEmptyWarning\">\n            <ng-container *ngIf=\"local.invalid\">\n              <ng-container *ngTemplateOutlet=\"template; context: getEmptyWarningContext()\"></ng-container>\n            </ng-container>\n          </ng-container>\n\n          <ng-template #defaultEmptyWarning>\n            <p [ngClass]=\"getClassNames('emptyWarning')\" *ngIf=\"local.invalid\">\n              {{emptyMessage}}\n            </p>\n          </ng-template>\n        </li>\n      </ng-container>\n    </ng-container>\n  </ul>\n</div>","styles":["@charset \"UTF-8\";:host{display:block;width:100%}:host .q-icon{font-size:12px;font-style:normal}:host .q-remove-icon:before{content:\"❌\"}:host .q-arrow-icon-button{cursor:pointer;float:left;margin:4px 6px 4px 0;transform:rotate(90deg);transition:transform .25s linear}:host .q-arrow-icon-button.q-collapsed{transform:rotate(0)}:host .q-arrow-icon:before{content:\"▶\"}:host .q-add-icon{color:#555}:host .q-add-icon:before{content:\"➕\"}:host .q-remove-button{color:#b3415d;width:31px}:host .q-button-group,:host .q-switch-group{font-family:Lucida Grande,Tahoma,Verdana,sans-serif;overflow:hidden}:host .q-right-align{float:right}:host .q-button{background-color:#fff;margin-left:8px;padding:0 8px}:host .q-button:disabled{display:none}:host .q-control-size{display:inline-block;padding-right:10px;vertical-align:top}:host .q-entity-control,:host .q-field-control,:host .q-input-control,:host .q-operator-control{background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;box-sizing:border-box;color:#555;display:inline-block;padding:5px 8px;width:auto}:host .q-entity-control:disabled,:host .q-field-control:disabled,:host .q-input-control:disabled,:host .q-operator-control:disabled{border-color:transparent}:host .q-entity-control,:host .q-field-control,:host .q-input-control:not([type=checkbox]),:host .q-operator-control{-webkit-appearance:none;min-height:32px}:host .q-button,:host .q-switch-label{border:1px solid rgba(0,0,0,.2);box-sizing:border-box;float:left;font-size:14px;font-weight:400;line-height:30px;margin-bottom:0;text-align:center;text-shadow:none}:host .q-button:hover,:host .q-switch-label:hover{background-color:#f0f0f0;cursor:pointer}:host .q-switch-label{background-color:#e4e4e4;padding:0 8px}:host .q-switch-radio{border:0;clip:rect(0,0,0,0);height:1px;overflow:hidden;position:absolute;width:1px}:host .q-switch-radio:checked+.q-switch-label{background:#fff;border:1px solid #619ed7;color:#3176b3}:host .q-switch-radio:disabled+.q-switch-label{display:none}:host .q-switch-radio:checked:disabled+.q-switch-label{border-color:transparent;color:initial;cursor:default;display:initial}:host .q-invalid-ruleset{background:rgba(179,65,93,.1)!important;border:1px solid rgba(179,65,93,.5)!important}:host .q-empty-warning{color:#8d252e;text-align:center}:host .q-rule,:host .q-ruleset{border:1px solid #ccc}:host .q-rule{background:#fff}:host .q-transition{transition:all .1s ease-in-out}:host .q-tree-container{overflow:hidden;transition:max-height .25s ease-in;width:100%}:host .q-tree-container.q-collapsed{max-height:0!important}:host .q-tree{list-style:none;margin:4px 0 2px}:host .q-row{margin-top:6px;padding:6px 8px}:host .q-connector{position:relative}:host .q-connector:before{border-width:0 0 2px 2px;top:-5px}:host .q-connector:after{border-width:0 0 0 2px;top:50%}:host .q-connector:after,:host .q-connector:before{border-color:#ccc;border-style:solid;content:\"\";height:calc(50% + 6px);left:-12px;position:absolute;width:9px}:host .q-connector:last-child:after{content:none}:host .q-inline-block-display{display:inline-block;vertical-align:top}"]}]}],"members":{"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":113,"character":3}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":114,"character":3}}]}],"allowRuleset":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":120,"character":3}}]}],"allowCollapse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":121,"character":3}}]}],"emptyMessage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":122,"character":3}}]}],"classNames":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":123,"character":3}}]}],"operatorMap":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":124,"character":3}}]}],"parentValue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":125,"character":3}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":126,"character":3}}]}],"parentArrowIconTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":127,"character":3}}]}],"parentInputTemplates":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":128,"character":3}}]}],"parentOperatorTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":129,"character":3}}]}],"parentFieldTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":130,"character":3}}]}],"parentEntityTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":131,"character":3}}]}],"parentSwitchGroupTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":132,"character":3}}]}],"parentButtonGroupTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":133,"character":3}}]}],"parentRemoveButtonTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":134,"character":3}}]}],"parentEmptyWarningTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":135,"character":3}}]}],"parentChangeCallback":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":136,"character":3}}]}],"parentTouchedCallback":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":137,"character":3}}]}],"persistValueOnFieldChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":138,"character":3}}]}],"treeContainer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":140,"character":3},"arguments":["treeContainer",{"static":true}]}]}],"buttonGroupTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":142,"character":3},"arguments":[{"__symbolic":"reference","name":"QueryButtonGroupDirective"}]}]}],"switchGroupTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":143,"character":3},"arguments":[{"__symbolic":"reference","name":"QuerySwitchGroupDirective"}]}]}],"fieldTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":144,"character":3},"arguments":[{"__symbolic":"reference","name":"QueryFieldDirective"}]}]}],"entityTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":145,"character":3},"arguments":[{"__symbolic":"reference","name":"QueryEntityDirective"}]}]}],"operatorTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":146,"character":3},"arguments":[{"__symbolic":"reference","name":"QueryOperatorDirective"}]}]}],"removeButtonTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":147,"character":3},"arguments":[{"__symbolic":"reference","name":"QueryRemoveButtonDirective"}]}]}],"emptyWarningTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":148,"character":3},"arguments":[{"__symbolic":"reference","name":"QueryEmptyWarningDirective"}]}]}],"inputTemplates":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren","line":149,"character":3},"arguments":[{"__symbolic":"reference","name":"QueryInputDirective"}]}]}],"arrowIconTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":150,"character":3},"arguments":[{"__symbolic":"reference","name":"QueryArrowIconDirective"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":165,"character":41}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"validate":[{"__symbolic":"method"}],"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":220,"character":3}}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"findTemplateForRule":[{"__symbolic":"method"}],"findQueryInput":[{"__symbolic":"method"}],"getOperators":[{"__symbolic":"method"}],"getFields":[{"__symbolic":"method"}],"getInputType":[{"__symbolic":"method"}],"getOptions":[{"__symbolic":"method"}],"getClassNames":[{"__symbolic":"method"}],"getDefaultField":[{"__symbolic":"method"}],"getDefaultOperator":[{"__symbolic":"method"}],"addRule":[{"__symbolic":"method"}],"removeRule":[{"__symbolic":"method"}],"addRuleSet":[{"__symbolic":"method"}],"removeRuleSet":[{"__symbolic":"method"}],"transitionEnd":[{"__symbolic":"method"}],"toggleCollapse":[{"__symbolic":"method"}],"computedTreeContainerHeight":[{"__symbolic":"method"}],"changeCondition":[{"__symbolic":"method"}],"changeOperator":[{"__symbolic":"method"}],"coerceValueForOperator":[{"__symbolic":"method"}],"changeInput":[{"__symbolic":"method"}],"changeField":[{"__symbolic":"method"}],"changeEntity":[{"__symbolic":"method"}],"getDefaultValue":[{"__symbolic":"method"}],"getOperatorTemplate":[{"__symbolic":"method"}],"getFieldTemplate":[{"__symbolic":"method"}],"getEntityTemplate":[{"__symbolic":"method"}],"getArrowIconTemplate":[{"__symbolic":"method"}],"getButtonGroupTemplate":[{"__symbolic":"method"}],"getSwitchGroupTemplate":[{"__symbolic":"method"}],"getRemoveButtonTemplate":[{"__symbolic":"method"}],"getEmptyWarningTemplate":[{"__symbolic":"method"}],"getQueryItemClassName":[{"__symbolic":"method"}],"getButtonGroupContext":[{"__symbolic":"method"}],"getRemoveButtonContext":[{"__symbolic":"method"}],"getFieldContext":[{"__symbolic":"method"}],"getEntityContext":[{"__symbolic":"method"}],"getSwitchGroupContext":[{"__symbolic":"method"}],"getArrowIconContext":[{"__symbolic":"method"}],"getEmptyWarningContext":[{"__symbolic":"method"}],"getOperatorContext":[{"__symbolic":"method"}],"getInputContext":[{"__symbolic":"method"}],"calculateFieldChangeValue":[{"__symbolic":"method"}],"checkEmptyRuleInRuleset":[{"__symbolic":"method"}],"validateRulesInRuleset":[{"__symbolic":"method"}],"handleDataChange":[{"__symbolic":"method"}],"handleTouched":[{"__symbolic":"method"}]}},"QueryButtonGroupDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[queryButtonGroup]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TemplateRef","module":"@angular/core","arguments":[{"__symbolic":"reference","name":"any"}]}]}]}},"QueryEntityDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[queryEntity]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TemplateRef","module":"@angular/core","arguments":[{"__symbolic":"reference","name":"any"}]}]}]}},"QueryFieldDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[queryField]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TemplateRef","module":"@angular/core","arguments":[{"__symbolic":"reference","name":"any"}]}]}]}},"QueryInputDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[queryInput]"}]}],"members":{"queryInputType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":5,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TemplateRef","module":"@angular/core","arguments":[{"__symbolic":"reference","name":"any"}]}]}]}},"QueryOperatorDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[queryOperator]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TemplateRef","module":"@angular/core","arguments":[{"__symbolic":"reference","name":"any"}]}]}]}},"QuerySwitchGroupDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[querySwitchGroup]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TemplateRef","module":"@angular/core","arguments":[{"__symbolic":"reference","name":"any"}]}]}]}},"QueryRemoveButtonDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[queryRemoveButton]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TemplateRef","module":"@angular/core","arguments":[{"__symbolic":"reference","name":"any"}]}]}]}},"QueryEmptyWarningDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[queryEmptyWarning]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TemplateRef","module":"@angular/core","arguments":[{"__symbolic":"reference","name":"any"}]}]}]}},"QueryArrowIconDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[queryArrowIcon]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TemplateRef","module":"@angular/core","arguments":[{"__symbolic":"reference","name":"any"}]}]}]}},"QueryBuilderModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":16,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":18,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":19,"character":4}],"declarations":[{"__symbolic":"reference","name":"QueryBuilderComponent"},{"__symbolic":"reference","name":"QueryInputDirective"},{"__symbolic":"reference","name":"QueryOperatorDirective"},{"__symbolic":"reference","name":"QueryFieldDirective"},{"__symbolic":"reference","name":"QueryEntityDirective"},{"__symbolic":"reference","name":"QueryButtonGroupDirective"},{"__symbolic":"reference","name":"QuerySwitchGroupDirective"},{"__symbolic":"reference","name":"QueryRemoveButtonDirective"},{"__symbolic":"reference","name":"QueryEmptyWarningDirective"},{"__symbolic":"reference","name":"QueryArrowIconDirective"}],"exports":[{"__symbolic":"reference","name":"QueryBuilderComponent"},{"__symbolic":"reference","name":"QueryInputDirective"},{"__symbolic":"reference","name":"QueryOperatorDirective"},{"__symbolic":"reference","name":"QueryFieldDirective"},{"__symbolic":"reference","name":"QueryEntityDirective"},{"__symbolic":"reference","name":"QueryButtonGroupDirective"},{"__symbolic":"reference","name":"QuerySwitchGroupDirective"},{"__symbolic":"reference","name":"QueryRemoveButtonDirective"},{"__symbolic":"reference","name":"QueryEmptyWarningDirective"},{"__symbolic":"reference","name":"QueryArrowIconDirective"}]}]}],"members":{}}},"origins":{"RuleSet":"./lib/query-builder/query-builder.interfaces","Rule":"./lib/query-builder/query-builder.interfaces","Option":"./lib/query-builder/query-builder.interfaces","FieldMap":"./lib/query-builder/query-builder.interfaces","Field":"./lib/query-builder/query-builder.interfaces","LocalRuleMeta":"./lib/query-builder/query-builder.interfaces","EntityMap":"./lib/query-builder/query-builder.interfaces","Entity":"./lib/query-builder/query-builder.interfaces","QueryBuilderClassNames":"./lib/query-builder/query-builder.interfaces","QueryBuilderConfig":"./lib/query-builder/query-builder.interfaces","SwitchGroupContext":"./lib/query-builder/query-builder.interfaces","EmptyWarningContext":"./lib/query-builder/query-builder.interfaces","ArrowIconContext":"./lib/query-builder/query-builder.interfaces","EntityContext":"./lib/query-builder/query-builder.interfaces","FieldContext":"./lib/query-builder/query-builder.interfaces","OperatorContext":"./lib/query-builder/query-builder.interfaces","InputContext":"./lib/query-builder/query-builder.interfaces","ButtonGroupContext":"./lib/query-builder/query-builder.interfaces","RemoveButtonContext":"./lib/query-builder/query-builder.interfaces","CONTROL_VALUE_ACCESSOR":"./lib/query-builder/query-builder.component","VALIDATOR":"./lib/query-builder/query-builder.component","QueryBuilderComponent":"./lib/query-builder/query-builder.component","QueryButtonGroupDirective":"./lib/query-builder/query-button-group.directive","QueryEntityDirective":"./lib/query-builder/query-entity.directive","QueryFieldDirective":"./lib/query-builder/query-field.directive","QueryInputDirective":"./lib/query-builder/query-input.directive","QueryOperatorDirective":"./lib/query-builder/query-operator.directive","QuerySwitchGroupDirective":"./lib/query-builder/query-switch-group.directive","QueryRemoveButtonDirective":"./lib/query-builder/query-remove-button.directive","QueryEmptyWarningDirective":"./lib/query-builder/query-empty-warning.directive","QueryArrowIconDirective":"./lib/query-builder/query-arrow-icon.directive","QueryBuilderModule":"./lib/angular2-query-builder.module"},"importAs":"angular2-query-builder"}